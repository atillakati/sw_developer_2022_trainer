openapi: 3.0.3
info:
  title: API description for Playlist project
  description: |-
    This is a sample Playlist Server based on the OpenAPI 3.0 specification.  You can find out more about
    OpenAPI at [https://oai.github.io/Documentation](https://oai.github.io/Documentation).    
    
    Playlist server should provide following functionalities:

    - Create playlists
    - Modify playlists
    - Get a list of all existing playlists

    Trainee playlist project homepage: [here](https://git.solve.ch/trainee-teachers/playlistgeneratorteacher/-/tree/main/doc)

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0.0

externalDocs:
  description: Find out more about OpenAPI
  url: https://oai.github.io/Documentation  

servers:
  - url: https://localhost/playlistapi/

tags:   
  - name: playlists
    description: Basic path to work with playlist items

paths:
  /playlists:
    get:
      tags:
        - playlists
      summary: Get all existing playlists
      description: Returns a list of existing playlist            
      responses:
        '201':
          description: Playlist was successful created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistList'                            
        '404':
          description: No playlists found      
    
    post:
      tags:
        - playlists
      summary: Creates a new playlist with data provided in body
      description: ''      
      requestBody:
        description: Creates new playlist with provided data in body.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaylistPost'
       
      responses:
        '201':
          description: successful operation           
          headers:
            location:
              schema:
                type: string
              description: "The link to generated ressource will be returned. e.g: http://localhost/playlistapi/4979875A-A40E-4CC6-99AB-CB5CE62DA97C"

        '405':
          description: Invalid input    

  /playlists/{playlistId}:
    get:
      tags:
        - playlists
      summary: Returns playlist by ID
      description: Returns a single playlist      
      parameters:
        - name: playlistId
          in: path
          description: ID of playlist to return
          required: true
          schema:
            type: string
            format: string
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Playlist'                    
        '400':
          description: Invalid ID supplied
        '404':
          description: Playlist not found      
    
    put:
      tags:
        - playlists
      summary: Updates playlist items by ID
      description: Updates playlist items by ID. The existing items within the playlist will be replaced by received item list.
      parameters:
        - name: playlistId
          in: path
          description: ID of playlist to update
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaylistUpdate'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Playlist'                    
        '400':
          description: Invalid ID supplied
        '404':
          description: Playlist not found  

    delete:
      tags:
        - playlists
      summary: Deletes a playlist
      description: delete a playlist      
      parameters:        
        - name: playlistId
          in: path
          description: ID of playlist to delete
          required: true
          schema:
            type: string
            format: string
      responses:
        '201':
          description: successful operation
        '400':
          description: Invalid playlist value 
        '404':
          description: Playlist not found      

components:
  schemas:
    PlaylistItem:
      type: object
      properties:
        title:
          type: string
          format: string
          example: The bird song
        artist:
          type: string
          format: string
          example: Gandalf Singer
        duration:
          type: integer
          format: int64
          example: 205
        thumbnail:
          type: string
          format: binary
        path:
          type: string
          format: string
          example: c:\myMusik\Bethoven.mp3
        
    Playlist:
      type: object
      properties:
        id: 
          type: string
          format: string
          example: 4979875A-A40E-4CC6-99AB-CB5CE62DA97C
        name:
          type: string
          format: string
          example: MyMegaHitsPlaylist_2022
        duration:
          type: integer
          format: int64
          example: 680
        autor:
          type: string
          format: string
          example: DJ Gandalf
        dateOfCreation: 
          type: string
          format: date          
          example: "2019-05-17"        
        items: 
          type: array
          items:
            $ref: '#/components/schemas/PlaylistItem'

    PlaylistLink:
      type: object
      properties:
        href: 
          type: string
          format: string
          example: "http:\\localhost/playlistapi/4979875A-A40E-4CC6-99AB-CB5CE62DA97C"        

    PlaylistUpdate:
      type: object
      properties:          
        items: 
          type: array
          items:
            $ref: '#/components/schemas/PlaylistItem'


    PlaylistPost:
      type: object
      properties:        
        name:
          type: string
          format: string
          example: MyMegaHitsPlaylist_2022        
        autor:
          type: string
          format: string
          example: DJ Gandalf        
        items: 
          type: array
          items:
            $ref: '#/components/schemas/PlaylistItem'

    PlaylistInfo:
      type: object
      properties:
        id: 
          type: string
          format: string
          example: 4979875A-A40E-4CC6-99AB-CB5CE62DA97C       
        name:
          type: string
          format: string
          example: MyMegaHitsPlaylist_2022       
        href:
          type: string
          format: string
          example: http://localhost/playlistapi/4979875A-A40E-4CC6-99AB-CB5CE62DA97C
        
    PlaylistList:
      type: object
      properties:
        playlists:  
          type: array
          items:
            $ref: '#/components/schemas/PlaylistInfo'

    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        petId:
          type: integer
          format: int64
          example: 198772
        quantity:
          type: integer
          format: int32
          example: 7
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          example: approved
          enum:
            - placed
            - approved
            - delivered
        complete:
          type: boolean      

